name: Docker Build and Push

on:
  push:
    branches:
      - master  # Set this to the branch you use

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        GUILD_ID: ${{ secrets.GUILD_ID }}
        OWNER_ID: ${{ secrets.OWNER_ID }}
        YOUTUBE_SECRET: ${{ secrets.YOUTUBE_SECRET }}
        GPT_SECRET: ${{ secrets.GPT_SECRET }}

    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and Push Docker Image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/discordbotv3:${{ github.sha }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/discordbotv3:${{ github.sha }}


    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/discordbotv3:${{ github.sha }}
          docker stop discordbot || true
          docker rm discordbot || true
          docker run -d --name discordbot -p 8080:8080 \
            -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
            -e GUILD_ID=${{ secrets.GUILD_ID }} \
            -e OWNER_ID=${{ secrets.OWNER_ID }} \
            -e YOUTUBE_SECRET=${{ secrets.YOUTUBE_SECRET }} \
            -e GPT_SECRET=${{ secrets.GPT_SECRET }} \
            ${{ secrets.DOCKER_USERNAME }}/discordbotv3:${{ github.sha }}
